/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.gusto.embedded_api.models.operations;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gusto.embedded_api.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
/**
 * PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesRequestBody - A list of employee objects containing the employee uuid
 */

public class PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesRequestBody {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("employees")
    private Optional<? extends List<PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesEmployees>> employees;

    @JsonCreator
    public PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesRequestBody(
            @JsonProperty("employees") Optional<? extends List<PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesEmployees>> employees) {
        Utils.checkNotNull(employees, "employees");
        this.employees = employees;
    }
    
    public PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesRequestBody() {
        this(Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesEmployees>> employees() {
        return (Optional<List<PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesEmployees>>) employees;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesRequestBody withEmployees(List<PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesEmployees> employees) {
        Utils.checkNotNull(employees, "employees");
        this.employees = Optional.ofNullable(employees);
        return this;
    }

    public PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesRequestBody withEmployees(Optional<? extends List<PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesEmployees>> employees) {
        Utils.checkNotNull(employees, "employees");
        this.employees = employees;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesRequestBody other = (PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesRequestBody) o;
        return 
            Objects.deepEquals(this.employees, other.employees);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            employees);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesRequestBody.class,
                "employees", employees);
    }
    
    public final static class Builder {
 
        private Optional<? extends List<PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesEmployees>> employees = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder employees(List<PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesEmployees> employees) {
            Utils.checkNotNull(employees, "employees");
            this.employees = Optional.ofNullable(employees);
            return this;
        }

        public Builder employees(Optional<? extends List<PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesEmployees>> employees) {
            Utils.checkNotNull(employees, "employees");
            this.employees = employees;
            return this;
        }
        
        public PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesRequestBody build() {
            return new PutV1TimeOffPoliciesTimeOffPolicyUuidRemoveEmployeesRequestBody(
                employees);
        }
    }
}

