/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.gusto.embedded_api.models.operations;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.gusto.embedded_api.models.components.VersionHeader;
import com.gusto.embedded_api.utils.SpeakeasyMetadata;
import com.gusto.embedded_api.utils.Utils;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;

public class GetV1BenefitsCompanyBenefitIdSummaryRequest {

    /**
     * The UUID of the company benefit
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=company_benefit_id")
    private String companyBenefitId;

    /**
     * The start date for which to retrieve company benefit summary
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=start_date")
    private Optional<String> startDate;

    /**
     * The end date for which to retrieve company benefit summary. If left empty, defaults to today's date.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=end_date")
    private Optional<String> endDate;

    /**
     * Display employee payroll item summary
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=detailed")
    private Optional<Boolean> detailed;

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Gusto-API-Version")
    private Optional<? extends VersionHeader> xGustoAPIVersion;

    @JsonCreator
    public GetV1BenefitsCompanyBenefitIdSummaryRequest(
            String companyBenefitId,
            Optional<String> startDate,
            Optional<String> endDate,
            Optional<Boolean> detailed,
            Optional<? extends VersionHeader> xGustoAPIVersion) {
        Utils.checkNotNull(companyBenefitId, "companyBenefitId");
        Utils.checkNotNull(startDate, "startDate");
        Utils.checkNotNull(endDate, "endDate");
        Utils.checkNotNull(detailed, "detailed");
        Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
        this.companyBenefitId = companyBenefitId;
        this.startDate = startDate;
        this.endDate = endDate;
        this.detailed = detailed;
        this.xGustoAPIVersion = xGustoAPIVersion;
    }
    
    public GetV1BenefitsCompanyBenefitIdSummaryRequest(
            String companyBenefitId) {
        this(companyBenefitId, Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty());
    }

    /**
     * The UUID of the company benefit
     */
    @JsonIgnore
    public String companyBenefitId() {
        return companyBenefitId;
    }

    /**
     * The start date for which to retrieve company benefit summary
     */
    @JsonIgnore
    public Optional<String> startDate() {
        return startDate;
    }

    /**
     * The end date for which to retrieve company benefit summary. If left empty, defaults to today's date.
     */
    @JsonIgnore
    public Optional<String> endDate() {
        return endDate;
    }

    /**
     * Display employee payroll item summary
     */
    @JsonIgnore
    public Optional<Boolean> detailed() {
        return detailed;
    }

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<VersionHeader> xGustoAPIVersion() {
        return (Optional<VersionHeader>) xGustoAPIVersion;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The UUID of the company benefit
     */
    public GetV1BenefitsCompanyBenefitIdSummaryRequest withCompanyBenefitId(String companyBenefitId) {
        Utils.checkNotNull(companyBenefitId, "companyBenefitId");
        this.companyBenefitId = companyBenefitId;
        return this;
    }

    /**
     * The start date for which to retrieve company benefit summary
     */
    public GetV1BenefitsCompanyBenefitIdSummaryRequest withStartDate(String startDate) {
        Utils.checkNotNull(startDate, "startDate");
        this.startDate = Optional.ofNullable(startDate);
        return this;
    }

    /**
     * The start date for which to retrieve company benefit summary
     */
    public GetV1BenefitsCompanyBenefitIdSummaryRequest withStartDate(Optional<String> startDate) {
        Utils.checkNotNull(startDate, "startDate");
        this.startDate = startDate;
        return this;
    }

    /**
     * The end date for which to retrieve company benefit summary. If left empty, defaults to today's date.
     */
    public GetV1BenefitsCompanyBenefitIdSummaryRequest withEndDate(String endDate) {
        Utils.checkNotNull(endDate, "endDate");
        this.endDate = Optional.ofNullable(endDate);
        return this;
    }

    /**
     * The end date for which to retrieve company benefit summary. If left empty, defaults to today's date.
     */
    public GetV1BenefitsCompanyBenefitIdSummaryRequest withEndDate(Optional<String> endDate) {
        Utils.checkNotNull(endDate, "endDate");
        this.endDate = endDate;
        return this;
    }

    /**
     * Display employee payroll item summary
     */
    public GetV1BenefitsCompanyBenefitIdSummaryRequest withDetailed(boolean detailed) {
        Utils.checkNotNull(detailed, "detailed");
        this.detailed = Optional.ofNullable(detailed);
        return this;
    }

    /**
     * Display employee payroll item summary
     */
    public GetV1BenefitsCompanyBenefitIdSummaryRequest withDetailed(Optional<Boolean> detailed) {
        Utils.checkNotNull(detailed, "detailed");
        this.detailed = detailed;
        return this;
    }

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    public GetV1BenefitsCompanyBenefitIdSummaryRequest withXGustoAPIVersion(VersionHeader xGustoAPIVersion) {
        Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
        this.xGustoAPIVersion = Optional.ofNullable(xGustoAPIVersion);
        return this;
    }

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    public GetV1BenefitsCompanyBenefitIdSummaryRequest withXGustoAPIVersion(Optional<? extends VersionHeader> xGustoAPIVersion) {
        Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
        this.xGustoAPIVersion = xGustoAPIVersion;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetV1BenefitsCompanyBenefitIdSummaryRequest other = (GetV1BenefitsCompanyBenefitIdSummaryRequest) o;
        return 
            Objects.deepEquals(this.companyBenefitId, other.companyBenefitId) &&
            Objects.deepEquals(this.startDate, other.startDate) &&
            Objects.deepEquals(this.endDate, other.endDate) &&
            Objects.deepEquals(this.detailed, other.detailed) &&
            Objects.deepEquals(this.xGustoAPIVersion, other.xGustoAPIVersion);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            companyBenefitId,
            startDate,
            endDate,
            detailed,
            xGustoAPIVersion);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetV1BenefitsCompanyBenefitIdSummaryRequest.class,
                "companyBenefitId", companyBenefitId,
                "startDate", startDate,
                "endDate", endDate,
                "detailed", detailed,
                "xGustoAPIVersion", xGustoAPIVersion);
    }
    
    public final static class Builder {
 
        private String companyBenefitId;
 
        private Optional<String> startDate = Optional.empty();
 
        private Optional<String> endDate = Optional.empty();
 
        private Optional<Boolean> detailed = Optional.empty();
 
        private Optional<? extends VersionHeader> xGustoAPIVersion = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The UUID of the company benefit
         */
        public Builder companyBenefitId(String companyBenefitId) {
            Utils.checkNotNull(companyBenefitId, "companyBenefitId");
            this.companyBenefitId = companyBenefitId;
            return this;
        }

        /**
         * The start date for which to retrieve company benefit summary
         */
        public Builder startDate(String startDate) {
            Utils.checkNotNull(startDate, "startDate");
            this.startDate = Optional.ofNullable(startDate);
            return this;
        }

        /**
         * The start date for which to retrieve company benefit summary
         */
        public Builder startDate(Optional<String> startDate) {
            Utils.checkNotNull(startDate, "startDate");
            this.startDate = startDate;
            return this;
        }

        /**
         * The end date for which to retrieve company benefit summary. If left empty, defaults to today's date.
         */
        public Builder endDate(String endDate) {
            Utils.checkNotNull(endDate, "endDate");
            this.endDate = Optional.ofNullable(endDate);
            return this;
        }

        /**
         * The end date for which to retrieve company benefit summary. If left empty, defaults to today's date.
         */
        public Builder endDate(Optional<String> endDate) {
            Utils.checkNotNull(endDate, "endDate");
            this.endDate = endDate;
            return this;
        }

        /**
         * Display employee payroll item summary
         */
        public Builder detailed(boolean detailed) {
            Utils.checkNotNull(detailed, "detailed");
            this.detailed = Optional.ofNullable(detailed);
            return this;
        }

        /**
         * Display employee payroll item summary
         */
        public Builder detailed(Optional<Boolean> detailed) {
            Utils.checkNotNull(detailed, "detailed");
            this.detailed = detailed;
            return this;
        }

        /**
         * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
         */
        public Builder xGustoAPIVersion(VersionHeader xGustoAPIVersion) {
            Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
            this.xGustoAPIVersion = Optional.ofNullable(xGustoAPIVersion);
            return this;
        }

        /**
         * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
         */
        public Builder xGustoAPIVersion(Optional<? extends VersionHeader> xGustoAPIVersion) {
            Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
            this.xGustoAPIVersion = xGustoAPIVersion;
            return this;
        }
        
        public GetV1BenefitsCompanyBenefitIdSummaryRequest build() {
            return new GetV1BenefitsCompanyBenefitIdSummaryRequest(
                companyBenefitId,
                startDate,
                endDate,
                detailed,
                xGustoAPIVersion);
        }
    }
}

