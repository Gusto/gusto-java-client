/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.gusto.embedded_api.models.operations;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gusto.embedded_api.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;

public class PostV1CompanyFlowsRequestBody {

    /**
     * flow type
     */
    @JsonProperty("flow_type")
    private String flowType;

    /**
     * UUID of the target entity applicable to the flow. This field is optional for company flows, please refer to the flow_types table above for more details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entity_uuid")
    private Optional<String> entityUuid;

    /**
     * the type of target entity applicable to the flow. This field is optional for company flows, please refer to the flow_types table above for more details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entity_type")
    private Optional<? extends EntityType> entityType;

    @JsonCreator
    public PostV1CompanyFlowsRequestBody(
            @JsonProperty("flow_type") String flowType,
            @JsonProperty("entity_uuid") Optional<String> entityUuid,
            @JsonProperty("entity_type") Optional<? extends EntityType> entityType) {
        Utils.checkNotNull(flowType, "flowType");
        Utils.checkNotNull(entityUuid, "entityUuid");
        Utils.checkNotNull(entityType, "entityType");
        this.flowType = flowType;
        this.entityUuid = entityUuid;
        this.entityType = entityType;
    }
    
    public PostV1CompanyFlowsRequestBody(
            String flowType) {
        this(flowType, Optional.empty(), Optional.empty());
    }

    /**
     * flow type
     */
    @JsonIgnore
    public String flowType() {
        return flowType;
    }

    /**
     * UUID of the target entity applicable to the flow. This field is optional for company flows, please refer to the flow_types table above for more details.
     */
    @JsonIgnore
    public Optional<String> entityUuid() {
        return entityUuid;
    }

    /**
     * the type of target entity applicable to the flow. This field is optional for company flows, please refer to the flow_types table above for more details.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<EntityType> entityType() {
        return (Optional<EntityType>) entityType;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * flow type
     */
    public PostV1CompanyFlowsRequestBody withFlowType(String flowType) {
        Utils.checkNotNull(flowType, "flowType");
        this.flowType = flowType;
        return this;
    }

    /**
     * UUID of the target entity applicable to the flow. This field is optional for company flows, please refer to the flow_types table above for more details.
     */
    public PostV1CompanyFlowsRequestBody withEntityUuid(String entityUuid) {
        Utils.checkNotNull(entityUuid, "entityUuid");
        this.entityUuid = Optional.ofNullable(entityUuid);
        return this;
    }

    /**
     * UUID of the target entity applicable to the flow. This field is optional for company flows, please refer to the flow_types table above for more details.
     */
    public PostV1CompanyFlowsRequestBody withEntityUuid(Optional<String> entityUuid) {
        Utils.checkNotNull(entityUuid, "entityUuid");
        this.entityUuid = entityUuid;
        return this;
    }

    /**
     * the type of target entity applicable to the flow. This field is optional for company flows, please refer to the flow_types table above for more details.
     */
    public PostV1CompanyFlowsRequestBody withEntityType(EntityType entityType) {
        Utils.checkNotNull(entityType, "entityType");
        this.entityType = Optional.ofNullable(entityType);
        return this;
    }

    /**
     * the type of target entity applicable to the flow. This field is optional for company flows, please refer to the flow_types table above for more details.
     */
    public PostV1CompanyFlowsRequestBody withEntityType(Optional<? extends EntityType> entityType) {
        Utils.checkNotNull(entityType, "entityType");
        this.entityType = entityType;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PostV1CompanyFlowsRequestBody other = (PostV1CompanyFlowsRequestBody) o;
        return 
            Objects.deepEquals(this.flowType, other.flowType) &&
            Objects.deepEquals(this.entityUuid, other.entityUuid) &&
            Objects.deepEquals(this.entityType, other.entityType);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            flowType,
            entityUuid,
            entityType);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PostV1CompanyFlowsRequestBody.class,
                "flowType", flowType,
                "entityUuid", entityUuid,
                "entityType", entityType);
    }
    
    public final static class Builder {
 
        private String flowType;
 
        private Optional<String> entityUuid = Optional.empty();
 
        private Optional<? extends EntityType> entityType = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * flow type
         */
        public Builder flowType(String flowType) {
            Utils.checkNotNull(flowType, "flowType");
            this.flowType = flowType;
            return this;
        }

        /**
         * UUID of the target entity applicable to the flow. This field is optional for company flows, please refer to the flow_types table above for more details.
         */
        public Builder entityUuid(String entityUuid) {
            Utils.checkNotNull(entityUuid, "entityUuid");
            this.entityUuid = Optional.ofNullable(entityUuid);
            return this;
        }

        /**
         * UUID of the target entity applicable to the flow. This field is optional for company flows, please refer to the flow_types table above for more details.
         */
        public Builder entityUuid(Optional<String> entityUuid) {
            Utils.checkNotNull(entityUuid, "entityUuid");
            this.entityUuid = entityUuid;
            return this;
        }

        /**
         * the type of target entity applicable to the flow. This field is optional for company flows, please refer to the flow_types table above for more details.
         */
        public Builder entityType(EntityType entityType) {
            Utils.checkNotNull(entityType, "entityType");
            this.entityType = Optional.ofNullable(entityType);
            return this;
        }

        /**
         * the type of target entity applicable to the flow. This field is optional for company flows, please refer to the flow_types table above for more details.
         */
        public Builder entityType(Optional<? extends EntityType> entityType) {
            Utils.checkNotNull(entityType, "entityType");
            this.entityType = entityType;
            return this;
        }
        
        public PostV1CompanyFlowsRequestBody build() {
            return new PostV1CompanyFlowsRequestBody(
                flowType,
                entityUuid,
                entityType);
        }
    }
}

