/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.gusto.embedded_api.models.operations;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gusto.embedded_api.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Objects;
/**
 * GetCompaniesCompanyUuidContractorPaymentsPreviewRequestBody - a list of contractor payments.
 */

public class GetCompaniesCompanyUuidContractorPaymentsPreviewRequestBody {

    @JsonProperty("contractor_payments")
    private List<GetCompaniesCompanyUuidContractorPaymentsPreviewContractorPayments> contractorPayments;

    @JsonCreator
    public GetCompaniesCompanyUuidContractorPaymentsPreviewRequestBody(
            @JsonProperty("contractor_payments") List<GetCompaniesCompanyUuidContractorPaymentsPreviewContractorPayments> contractorPayments) {
        Utils.checkNotNull(contractorPayments, "contractorPayments");
        this.contractorPayments = contractorPayments;
    }

    @JsonIgnore
    public List<GetCompaniesCompanyUuidContractorPaymentsPreviewContractorPayments> contractorPayments() {
        return contractorPayments;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public GetCompaniesCompanyUuidContractorPaymentsPreviewRequestBody withContractorPayments(List<GetCompaniesCompanyUuidContractorPaymentsPreviewContractorPayments> contractorPayments) {
        Utils.checkNotNull(contractorPayments, "contractorPayments");
        this.contractorPayments = contractorPayments;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetCompaniesCompanyUuidContractorPaymentsPreviewRequestBody other = (GetCompaniesCompanyUuidContractorPaymentsPreviewRequestBody) o;
        return 
            Objects.deepEquals(this.contractorPayments, other.contractorPayments);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            contractorPayments);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetCompaniesCompanyUuidContractorPaymentsPreviewRequestBody.class,
                "contractorPayments", contractorPayments);
    }
    
    public final static class Builder {
 
        private List<GetCompaniesCompanyUuidContractorPaymentsPreviewContractorPayments> contractorPayments;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder contractorPayments(List<GetCompaniesCompanyUuidContractorPaymentsPreviewContractorPayments> contractorPayments) {
            Utils.checkNotNull(contractorPayments, "contractorPayments");
            this.contractorPayments = contractorPayments;
            return this;
        }
        
        public GetCompaniesCompanyUuidContractorPaymentsPreviewRequestBody build() {
            return new GetCompaniesCompanyUuidContractorPaymentsPreviewRequestBody(
                contractorPayments);
        }
    }
}

