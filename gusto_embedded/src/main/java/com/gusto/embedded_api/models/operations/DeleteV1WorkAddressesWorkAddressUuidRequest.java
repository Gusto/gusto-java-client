/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.gusto.embedded_api.models.operations;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import com.gusto.embedded_api.utils.LazySingletonValue;
import com.gusto.embedded_api.utils.SpeakeasyMetadata;
import com.gusto.embedded_api.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;

public class DeleteV1WorkAddressesWorkAddressUuidRequest {

    /**
     * The UUID of the work address
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=work_address_uuid")
    private String workAddressUuid;

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Gusto-API-Version")
    private Optional<? extends DeleteV1WorkAddressesWorkAddressUuidHeaderXGustoAPIVersion> xGustoAPIVersion;

    @JsonCreator
    public DeleteV1WorkAddressesWorkAddressUuidRequest(
            String workAddressUuid,
            Optional<? extends DeleteV1WorkAddressesWorkAddressUuidHeaderXGustoAPIVersion> xGustoAPIVersion) {
        Utils.checkNotNull(workAddressUuid, "workAddressUuid");
        Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
        this.workAddressUuid = workAddressUuid;
        this.xGustoAPIVersion = xGustoAPIVersion;
    }
    
    public DeleteV1WorkAddressesWorkAddressUuidRequest(
            String workAddressUuid) {
        this(workAddressUuid, Optional.empty());
    }

    /**
     * The UUID of the work address
     */
    @JsonIgnore
    public String workAddressUuid() {
        return workAddressUuid;
    }

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<DeleteV1WorkAddressesWorkAddressUuidHeaderXGustoAPIVersion> xGustoAPIVersion() {
        return (Optional<DeleteV1WorkAddressesWorkAddressUuidHeaderXGustoAPIVersion>) xGustoAPIVersion;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The UUID of the work address
     */
    public DeleteV1WorkAddressesWorkAddressUuidRequest withWorkAddressUuid(String workAddressUuid) {
        Utils.checkNotNull(workAddressUuid, "workAddressUuid");
        this.workAddressUuid = workAddressUuid;
        return this;
    }

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    public DeleteV1WorkAddressesWorkAddressUuidRequest withXGustoAPIVersion(DeleteV1WorkAddressesWorkAddressUuidHeaderXGustoAPIVersion xGustoAPIVersion) {
        Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
        this.xGustoAPIVersion = Optional.ofNullable(xGustoAPIVersion);
        return this;
    }

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    public DeleteV1WorkAddressesWorkAddressUuidRequest withXGustoAPIVersion(Optional<? extends DeleteV1WorkAddressesWorkAddressUuidHeaderXGustoAPIVersion> xGustoAPIVersion) {
        Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
        this.xGustoAPIVersion = xGustoAPIVersion;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeleteV1WorkAddressesWorkAddressUuidRequest other = (DeleteV1WorkAddressesWorkAddressUuidRequest) o;
        return 
            Objects.deepEquals(this.workAddressUuid, other.workAddressUuid) &&
            Objects.deepEquals(this.xGustoAPIVersion, other.xGustoAPIVersion);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            workAddressUuid,
            xGustoAPIVersion);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DeleteV1WorkAddressesWorkAddressUuidRequest.class,
                "workAddressUuid", workAddressUuid,
                "xGustoAPIVersion", xGustoAPIVersion);
    }
    
    public final static class Builder {
 
        private String workAddressUuid;
 
        private Optional<? extends DeleteV1WorkAddressesWorkAddressUuidHeaderXGustoAPIVersion> xGustoAPIVersion;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The UUID of the work address
         */
        public Builder workAddressUuid(String workAddressUuid) {
            Utils.checkNotNull(workAddressUuid, "workAddressUuid");
            this.workAddressUuid = workAddressUuid;
            return this;
        }

        /**
         * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
         */
        public Builder xGustoAPIVersion(DeleteV1WorkAddressesWorkAddressUuidHeaderXGustoAPIVersion xGustoAPIVersion) {
            Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
            this.xGustoAPIVersion = Optional.ofNullable(xGustoAPIVersion);
            return this;
        }

        /**
         * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
         */
        public Builder xGustoAPIVersion(Optional<? extends DeleteV1WorkAddressesWorkAddressUuidHeaderXGustoAPIVersion> xGustoAPIVersion) {
            Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
            this.xGustoAPIVersion = xGustoAPIVersion;
            return this;
        }
        
        public DeleteV1WorkAddressesWorkAddressUuidRequest build() {
            if (xGustoAPIVersion == null) {
                xGustoAPIVersion = _SINGLETON_VALUE_XGustoAPIVersion.value();
            }            return new DeleteV1WorkAddressesWorkAddressUuidRequest(
                workAddressUuid,
                xGustoAPIVersion);
        }

        private static final LazySingletonValue<Optional<? extends DeleteV1WorkAddressesWorkAddressUuidHeaderXGustoAPIVersion>> _SINGLETON_VALUE_XGustoAPIVersion =
                new LazySingletonValue<>(
                        "X-Gusto-API-Version",
                        "\"2024-04-01\"",
                        new TypeReference<Optional<? extends DeleteV1WorkAddressesWorkAddressUuidHeaderXGustoAPIVersion>>() {});
    }
}

