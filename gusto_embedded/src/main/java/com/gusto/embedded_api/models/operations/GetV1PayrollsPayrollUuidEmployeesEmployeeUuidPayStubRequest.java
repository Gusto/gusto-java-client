/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.gusto.embedded_api.models.operations;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import com.gusto.embedded_api.utils.LazySingletonValue;
import com.gusto.embedded_api.utils.SpeakeasyMetadata;
import com.gusto.embedded_api.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;

public class GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubRequest {

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Gusto-API-Version")
    private Optional<? extends GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubHeaderXGustoAPIVersion> xGustoAPIVersion;

    /**
     * The UUID of the payroll
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=payroll_id")
    private String payrollId;

    /**
     * The UUID of the employee
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=employee_id")
    private String employeeId;

    @JsonCreator
    public GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubRequest(
            Optional<? extends GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubHeaderXGustoAPIVersion> xGustoAPIVersion,
            String payrollId,
            String employeeId) {
        Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
        Utils.checkNotNull(payrollId, "payrollId");
        Utils.checkNotNull(employeeId, "employeeId");
        this.xGustoAPIVersion = xGustoAPIVersion;
        this.payrollId = payrollId;
        this.employeeId = employeeId;
    }
    
    public GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubRequest(
            String payrollId,
            String employeeId) {
        this(Optional.empty(), payrollId, employeeId);
    }

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubHeaderXGustoAPIVersion> xGustoAPIVersion() {
        return (Optional<GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubHeaderXGustoAPIVersion>) xGustoAPIVersion;
    }

    /**
     * The UUID of the payroll
     */
    @JsonIgnore
    public String payrollId() {
        return payrollId;
    }

    /**
     * The UUID of the employee
     */
    @JsonIgnore
    public String employeeId() {
        return employeeId;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    public GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubRequest withXGustoAPIVersion(GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubHeaderXGustoAPIVersion xGustoAPIVersion) {
        Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
        this.xGustoAPIVersion = Optional.ofNullable(xGustoAPIVersion);
        return this;
    }

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    public GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubRequest withXGustoAPIVersion(Optional<? extends GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubHeaderXGustoAPIVersion> xGustoAPIVersion) {
        Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
        this.xGustoAPIVersion = xGustoAPIVersion;
        return this;
    }

    /**
     * The UUID of the payroll
     */
    public GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubRequest withPayrollId(String payrollId) {
        Utils.checkNotNull(payrollId, "payrollId");
        this.payrollId = payrollId;
        return this;
    }

    /**
     * The UUID of the employee
     */
    public GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubRequest withEmployeeId(String employeeId) {
        Utils.checkNotNull(employeeId, "employeeId");
        this.employeeId = employeeId;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubRequest other = (GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubRequest) o;
        return 
            Objects.deepEquals(this.xGustoAPIVersion, other.xGustoAPIVersion) &&
            Objects.deepEquals(this.payrollId, other.payrollId) &&
            Objects.deepEquals(this.employeeId, other.employeeId);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            xGustoAPIVersion,
            payrollId,
            employeeId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubRequest.class,
                "xGustoAPIVersion", xGustoAPIVersion,
                "payrollId", payrollId,
                "employeeId", employeeId);
    }
    
    public final static class Builder {
 
        private Optional<? extends GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubHeaderXGustoAPIVersion> xGustoAPIVersion;
 
        private String payrollId;
 
        private String employeeId;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
         */
        public Builder xGustoAPIVersion(GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubHeaderXGustoAPIVersion xGustoAPIVersion) {
            Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
            this.xGustoAPIVersion = Optional.ofNullable(xGustoAPIVersion);
            return this;
        }

        /**
         * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
         */
        public Builder xGustoAPIVersion(Optional<? extends GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubHeaderXGustoAPIVersion> xGustoAPIVersion) {
            Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
            this.xGustoAPIVersion = xGustoAPIVersion;
            return this;
        }

        /**
         * The UUID of the payroll
         */
        public Builder payrollId(String payrollId) {
            Utils.checkNotNull(payrollId, "payrollId");
            this.payrollId = payrollId;
            return this;
        }

        /**
         * The UUID of the employee
         */
        public Builder employeeId(String employeeId) {
            Utils.checkNotNull(employeeId, "employeeId");
            this.employeeId = employeeId;
            return this;
        }
        
        public GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubRequest build() {
            if (xGustoAPIVersion == null) {
                xGustoAPIVersion = _SINGLETON_VALUE_XGustoAPIVersion.value();
            }            return new GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubRequest(
                xGustoAPIVersion,
                payrollId,
                employeeId);
        }

        private static final LazySingletonValue<Optional<? extends GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubHeaderXGustoAPIVersion>> _SINGLETON_VALUE_XGustoAPIVersion =
                new LazySingletonValue<>(
                        "X-Gusto-API-Version",
                        "\"2024-04-01\"",
                        new TypeReference<Optional<? extends GetV1PayrollsPayrollUuidEmployeesEmployeeUuidPayStubHeaderXGustoAPIVersion>>() {});
    }
}

