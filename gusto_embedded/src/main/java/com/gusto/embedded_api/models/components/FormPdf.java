/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.gusto.embedded_api.models.components;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gusto.embedded_api.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;
/**
 * FormPdf
 * 
 * <p>Example response
 */

public class FormPdf {

    /**
     * the UUID of the form
     */
    @JsonProperty("uuid")
    private String uuid;

    /**
     * the URL of the form
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("document_url")
    private JsonNullable<String> documentUrl;

    /**
     * The content type of the associated document. Most forms are PDFs with a content type of `application/pdf`. Some tax file packages will be zip files (containing PDFs) with a content type of `application/zip`. This attribute will be `null` when the document has not been prepared.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("document_content_type")
    private JsonNullable<String> documentContentType;

    @JsonCreator
    public FormPdf(
            @JsonProperty("uuid") String uuid,
            @JsonProperty("document_url") JsonNullable<String> documentUrl,
            @JsonProperty("document_content_type") JsonNullable<String> documentContentType) {
        Utils.checkNotNull(uuid, "uuid");
        Utils.checkNotNull(documentUrl, "documentUrl");
        Utils.checkNotNull(documentContentType, "documentContentType");
        this.uuid = uuid;
        this.documentUrl = documentUrl;
        this.documentContentType = documentContentType;
    }
    
    public FormPdf(
            String uuid) {
        this(uuid, JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * the UUID of the form
     */
    @JsonIgnore
    public String uuid() {
        return uuid;
    }

    /**
     * the URL of the form
     */
    @JsonIgnore
    public JsonNullable<String> documentUrl() {
        return documentUrl;
    }

    /**
     * The content type of the associated document. Most forms are PDFs with a content type of `application/pdf`. Some tax file packages will be zip files (containing PDFs) with a content type of `application/zip`. This attribute will be `null` when the document has not been prepared.
     */
    @JsonIgnore
    public JsonNullable<String> documentContentType() {
        return documentContentType;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * the UUID of the form
     */
    public FormPdf withUuid(String uuid) {
        Utils.checkNotNull(uuid, "uuid");
        this.uuid = uuid;
        return this;
    }

    /**
     * the URL of the form
     */
    public FormPdf withDocumentUrl(String documentUrl) {
        Utils.checkNotNull(documentUrl, "documentUrl");
        this.documentUrl = JsonNullable.of(documentUrl);
        return this;
    }

    /**
     * the URL of the form
     */
    public FormPdf withDocumentUrl(JsonNullable<String> documentUrl) {
        Utils.checkNotNull(documentUrl, "documentUrl");
        this.documentUrl = documentUrl;
        return this;
    }

    /**
     * The content type of the associated document. Most forms are PDFs with a content type of `application/pdf`. Some tax file packages will be zip files (containing PDFs) with a content type of `application/zip`. This attribute will be `null` when the document has not been prepared.
     */
    public FormPdf withDocumentContentType(String documentContentType) {
        Utils.checkNotNull(documentContentType, "documentContentType");
        this.documentContentType = JsonNullable.of(documentContentType);
        return this;
    }

    /**
     * The content type of the associated document. Most forms are PDFs with a content type of `application/pdf`. Some tax file packages will be zip files (containing PDFs) with a content type of `application/zip`. This attribute will be `null` when the document has not been prepared.
     */
    public FormPdf withDocumentContentType(JsonNullable<String> documentContentType) {
        Utils.checkNotNull(documentContentType, "documentContentType");
        this.documentContentType = documentContentType;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FormPdf other = (FormPdf) o;
        return 
            Objects.deepEquals(this.uuid, other.uuid) &&
            Objects.deepEquals(this.documentUrl, other.documentUrl) &&
            Objects.deepEquals(this.documentContentType, other.documentContentType);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            uuid,
            documentUrl,
            documentContentType);
    }
    
    @Override
    public String toString() {
        return Utils.toString(FormPdf.class,
                "uuid", uuid,
                "documentUrl", documentUrl,
                "documentContentType", documentContentType);
    }
    
    public final static class Builder {
 
        private String uuid;
 
        private JsonNullable<String> documentUrl = JsonNullable.undefined();
 
        private JsonNullable<String> documentContentType = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * the UUID of the form
         */
        public Builder uuid(String uuid) {
            Utils.checkNotNull(uuid, "uuid");
            this.uuid = uuid;
            return this;
        }

        /**
         * the URL of the form
         */
        public Builder documentUrl(String documentUrl) {
            Utils.checkNotNull(documentUrl, "documentUrl");
            this.documentUrl = JsonNullable.of(documentUrl);
            return this;
        }

        /**
         * the URL of the form
         */
        public Builder documentUrl(JsonNullable<String> documentUrl) {
            Utils.checkNotNull(documentUrl, "documentUrl");
            this.documentUrl = documentUrl;
            return this;
        }

        /**
         * The content type of the associated document. Most forms are PDFs with a content type of `application/pdf`. Some tax file packages will be zip files (containing PDFs) with a content type of `application/zip`. This attribute will be `null` when the document has not been prepared.
         */
        public Builder documentContentType(String documentContentType) {
            Utils.checkNotNull(documentContentType, "documentContentType");
            this.documentContentType = JsonNullable.of(documentContentType);
            return this;
        }

        /**
         * The content type of the associated document. Most forms are PDFs with a content type of `application/pdf`. Some tax file packages will be zip files (containing PDFs) with a content type of `application/zip`. This attribute will be `null` when the document has not been prepared.
         */
        public Builder documentContentType(JsonNullable<String> documentContentType) {
            Utils.checkNotNull(documentContentType, "documentContentType");
            this.documentContentType = documentContentType;
            return this;
        }
        
        public FormPdf build() {
            return new FormPdf(
                uuid,
                documentUrl,
                documentContentType);
        }
    }
}

