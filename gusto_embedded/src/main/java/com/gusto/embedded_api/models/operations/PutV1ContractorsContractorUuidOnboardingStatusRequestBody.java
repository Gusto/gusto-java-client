/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.gusto.embedded_api.models.operations;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.gusto.embedded_api.utils.LazySingletonValue;
import com.gusto.embedded_api.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;

public class PutV1ContractorsContractorUuidOnboardingStatusRequestBody {

    /**
     * The updated onboarding status for the contractor
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onboarding_status")
    private Optional<? extends OnboardingStatus> onboardingStatus;

    @JsonCreator
    public PutV1ContractorsContractorUuidOnboardingStatusRequestBody(
            @JsonProperty("onboarding_status") Optional<? extends OnboardingStatus> onboardingStatus) {
        Utils.checkNotNull(onboardingStatus, "onboardingStatus");
        this.onboardingStatus = onboardingStatus;
    }
    
    public PutV1ContractorsContractorUuidOnboardingStatusRequestBody() {
        this(Optional.empty());
    }

    /**
     * The updated onboarding status for the contractor
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<OnboardingStatus> onboardingStatus() {
        return (Optional<OnboardingStatus>) onboardingStatus;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The updated onboarding status for the contractor
     */
    public PutV1ContractorsContractorUuidOnboardingStatusRequestBody withOnboardingStatus(OnboardingStatus onboardingStatus) {
        Utils.checkNotNull(onboardingStatus, "onboardingStatus");
        this.onboardingStatus = Optional.ofNullable(onboardingStatus);
        return this;
    }

    /**
     * The updated onboarding status for the contractor
     */
    public PutV1ContractorsContractorUuidOnboardingStatusRequestBody withOnboardingStatus(Optional<? extends OnboardingStatus> onboardingStatus) {
        Utils.checkNotNull(onboardingStatus, "onboardingStatus");
        this.onboardingStatus = onboardingStatus;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PutV1ContractorsContractorUuidOnboardingStatusRequestBody other = (PutV1ContractorsContractorUuidOnboardingStatusRequestBody) o;
        return 
            Objects.deepEquals(this.onboardingStatus, other.onboardingStatus);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            onboardingStatus);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PutV1ContractorsContractorUuidOnboardingStatusRequestBody.class,
                "onboardingStatus", onboardingStatus);
    }
    
    public final static class Builder {
 
        private Optional<? extends OnboardingStatus> onboardingStatus;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The updated onboarding status for the contractor
         */
        public Builder onboardingStatus(OnboardingStatus onboardingStatus) {
            Utils.checkNotNull(onboardingStatus, "onboardingStatus");
            this.onboardingStatus = Optional.ofNullable(onboardingStatus);
            return this;
        }

        /**
         * The updated onboarding status for the contractor
         */
        public Builder onboardingStatus(Optional<? extends OnboardingStatus> onboardingStatus) {
            Utils.checkNotNull(onboardingStatus, "onboardingStatus");
            this.onboardingStatus = onboardingStatus;
            return this;
        }
        
        public PutV1ContractorsContractorUuidOnboardingStatusRequestBody build() {
            if (onboardingStatus == null) {
                onboardingStatus = _SINGLETON_VALUE_OnboardingStatus.value();
            }            return new PutV1ContractorsContractorUuidOnboardingStatusRequestBody(
                onboardingStatus);
        }

        private static final LazySingletonValue<Optional<? extends OnboardingStatus>> _SINGLETON_VALUE_OnboardingStatus =
                new LazySingletonValue<>(
                        "onboarding_status",
                        "\"onboarding_completed\"",
                        new TypeReference<Optional<? extends OnboardingStatus>>() {});
    }
}

