/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.gusto.embedded_api.models.operations;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gusto.embedded_api.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

public class PutV1ContractorsContractorIdPaymentMethodRequestBody {

    /**
     * The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for information on how to use this field.
     */
    @JsonProperty("version")
    private String version;

    /**
     * The payment method type. If type is Direct Deposit, the contractor is required to have a bank account.
     * see [Bank account endpoint](./post-v1-contractors-contractor_uuid-bank_accounts)
     */
    @JsonProperty("type")
    private PutV1ContractorsContractorIdPaymentMethodType type;

    @JsonCreator
    public PutV1ContractorsContractorIdPaymentMethodRequestBody(
            @JsonProperty("version") String version,
            @JsonProperty("type") PutV1ContractorsContractorIdPaymentMethodType type) {
        Utils.checkNotNull(version, "version");
        Utils.checkNotNull(type, "type");
        this.version = version;
        this.type = type;
    }

    /**
     * The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for information on how to use this field.
     */
    @JsonIgnore
    public String version() {
        return version;
    }

    /**
     * The payment method type. If type is Direct Deposit, the contractor is required to have a bank account.
     * see [Bank account endpoint](./post-v1-contractors-contractor_uuid-bank_accounts)
     */
    @JsonIgnore
    public PutV1ContractorsContractorIdPaymentMethodType type() {
        return type;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for information on how to use this field.
     */
    public PutV1ContractorsContractorIdPaymentMethodRequestBody withVersion(String version) {
        Utils.checkNotNull(version, "version");
        this.version = version;
        return this;
    }

    /**
     * The payment method type. If type is Direct Deposit, the contractor is required to have a bank account.
     * see [Bank account endpoint](./post-v1-contractors-contractor_uuid-bank_accounts)
     */
    public PutV1ContractorsContractorIdPaymentMethodRequestBody withType(PutV1ContractorsContractorIdPaymentMethodType type) {
        Utils.checkNotNull(type, "type");
        this.type = type;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PutV1ContractorsContractorIdPaymentMethodRequestBody other = (PutV1ContractorsContractorIdPaymentMethodRequestBody) o;
        return 
            Objects.deepEquals(this.version, other.version) &&
            Objects.deepEquals(this.type, other.type);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            version,
            type);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PutV1ContractorsContractorIdPaymentMethodRequestBody.class,
                "version", version,
                "type", type);
    }
    
    public final static class Builder {
 
        private String version;
 
        private PutV1ContractorsContractorIdPaymentMethodType type;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for information on how to use this field.
         */
        public Builder version(String version) {
            Utils.checkNotNull(version, "version");
            this.version = version;
            return this;
        }

        /**
         * The payment method type. If type is Direct Deposit, the contractor is required to have a bank account.
         * see [Bank account endpoint](./post-v1-contractors-contractor_uuid-bank_accounts)
         */
        public Builder type(PutV1ContractorsContractorIdPaymentMethodType type) {
            Utils.checkNotNull(type, "type");
            this.type = type;
            return this;
        }
        
        public PutV1ContractorsContractorIdPaymentMethodRequestBody build() {
            return new PutV1ContractorsContractorIdPaymentMethodRequestBody(
                version,
                type);
        }
    }
}

