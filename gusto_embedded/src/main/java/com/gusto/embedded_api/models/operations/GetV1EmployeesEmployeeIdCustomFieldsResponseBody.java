/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.gusto.embedded_api.models.operations;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gusto.embedded_api.models.components.EmployeeCustomField;
import com.gusto.embedded_api.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
/**
 * GetV1EmployeesEmployeeIdCustomFieldsResponseBody - OK
 */

public class GetV1EmployeesEmployeeIdCustomFieldsResponseBody {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_fields")
    private Optional<? extends List<EmployeeCustomField>> customFields;

    @JsonCreator
    public GetV1EmployeesEmployeeIdCustomFieldsResponseBody(
            @JsonProperty("custom_fields") Optional<? extends List<EmployeeCustomField>> customFields) {
        Utils.checkNotNull(customFields, "customFields");
        this.customFields = customFields;
    }
    
    public GetV1EmployeesEmployeeIdCustomFieldsResponseBody() {
        this(Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<EmployeeCustomField>> customFields() {
        return (Optional<List<EmployeeCustomField>>) customFields;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public GetV1EmployeesEmployeeIdCustomFieldsResponseBody withCustomFields(List<EmployeeCustomField> customFields) {
        Utils.checkNotNull(customFields, "customFields");
        this.customFields = Optional.ofNullable(customFields);
        return this;
    }

    public GetV1EmployeesEmployeeIdCustomFieldsResponseBody withCustomFields(Optional<? extends List<EmployeeCustomField>> customFields) {
        Utils.checkNotNull(customFields, "customFields");
        this.customFields = customFields;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetV1EmployeesEmployeeIdCustomFieldsResponseBody other = (GetV1EmployeesEmployeeIdCustomFieldsResponseBody) o;
        return 
            Objects.deepEquals(this.customFields, other.customFields);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            customFields);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetV1EmployeesEmployeeIdCustomFieldsResponseBody.class,
                "customFields", customFields);
    }
    
    public final static class Builder {
 
        private Optional<? extends List<EmployeeCustomField>> customFields = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder customFields(List<EmployeeCustomField> customFields) {
            Utils.checkNotNull(customFields, "customFields");
            this.customFields = Optional.ofNullable(customFields);
            return this;
        }

        public Builder customFields(Optional<? extends List<EmployeeCustomField>> customFields) {
            Utils.checkNotNull(customFields, "customFields");
            this.customFields = customFields;
            return this;
        }
        
        public GetV1EmployeesEmployeeIdCustomFieldsResponseBody build() {
            return new GetV1EmployeesEmployeeIdCustomFieldsResponseBody(
                customFields);
        }
    }
}

