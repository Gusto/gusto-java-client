/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.gusto.embedded_api.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.gusto.embedded_api.models.components.VersionHeader;
import com.gusto.embedded_api.utils.SpeakeasyMetadata;
import com.gusto.embedded_api.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;


public class DeleteV1EmployeesEmployeeIdI9AuthorizationDocumentsDocumentIdRequest {

    /**
     * The UUID of the employee
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=employee_id")
    private String employeeId;

    /**
     * The UUID of the document
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=document_id")
    private String documentId;

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Gusto-API-Version")
    private Optional<? extends VersionHeader> xGustoAPIVersion;

    @JsonCreator
    public DeleteV1EmployeesEmployeeIdI9AuthorizationDocumentsDocumentIdRequest(
            String employeeId,
            String documentId,
            Optional<? extends VersionHeader> xGustoAPIVersion) {
        Utils.checkNotNull(employeeId, "employeeId");
        Utils.checkNotNull(documentId, "documentId");
        Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
        this.employeeId = employeeId;
        this.documentId = documentId;
        this.xGustoAPIVersion = xGustoAPIVersion;
    }
    
    public DeleteV1EmployeesEmployeeIdI9AuthorizationDocumentsDocumentIdRequest(
            String employeeId,
            String documentId) {
        this(employeeId, documentId, Optional.empty());
    }

    /**
     * The UUID of the employee
     */
    @JsonIgnore
    public String employeeId() {
        return employeeId;
    }

    /**
     * The UUID of the document
     */
    @JsonIgnore
    public String documentId() {
        return documentId;
    }

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<VersionHeader> xGustoAPIVersion() {
        return (Optional<VersionHeader>) xGustoAPIVersion;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The UUID of the employee
     */
    public DeleteV1EmployeesEmployeeIdI9AuthorizationDocumentsDocumentIdRequest withEmployeeId(String employeeId) {
        Utils.checkNotNull(employeeId, "employeeId");
        this.employeeId = employeeId;
        return this;
    }

    /**
     * The UUID of the document
     */
    public DeleteV1EmployeesEmployeeIdI9AuthorizationDocumentsDocumentIdRequest withDocumentId(String documentId) {
        Utils.checkNotNull(documentId, "documentId");
        this.documentId = documentId;
        return this;
    }

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    public DeleteV1EmployeesEmployeeIdI9AuthorizationDocumentsDocumentIdRequest withXGustoAPIVersion(VersionHeader xGustoAPIVersion) {
        Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
        this.xGustoAPIVersion = Optional.ofNullable(xGustoAPIVersion);
        return this;
    }

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    public DeleteV1EmployeesEmployeeIdI9AuthorizationDocumentsDocumentIdRequest withXGustoAPIVersion(Optional<? extends VersionHeader> xGustoAPIVersion) {
        Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
        this.xGustoAPIVersion = xGustoAPIVersion;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeleteV1EmployeesEmployeeIdI9AuthorizationDocumentsDocumentIdRequest other = (DeleteV1EmployeesEmployeeIdI9AuthorizationDocumentsDocumentIdRequest) o;
        return 
            Objects.deepEquals(this.employeeId, other.employeeId) &&
            Objects.deepEquals(this.documentId, other.documentId) &&
            Objects.deepEquals(this.xGustoAPIVersion, other.xGustoAPIVersion);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            employeeId,
            documentId,
            xGustoAPIVersion);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DeleteV1EmployeesEmployeeIdI9AuthorizationDocumentsDocumentIdRequest.class,
                "employeeId", employeeId,
                "documentId", documentId,
                "xGustoAPIVersion", xGustoAPIVersion);
    }
    
    public final static class Builder {
 
        private String employeeId;
 
        private String documentId;
 
        private Optional<? extends VersionHeader> xGustoAPIVersion = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The UUID of the employee
         */
        public Builder employeeId(String employeeId) {
            Utils.checkNotNull(employeeId, "employeeId");
            this.employeeId = employeeId;
            return this;
        }

        /**
         * The UUID of the document
         */
        public Builder documentId(String documentId) {
            Utils.checkNotNull(documentId, "documentId");
            this.documentId = documentId;
            return this;
        }

        /**
         * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
         */
        public Builder xGustoAPIVersion(VersionHeader xGustoAPIVersion) {
            Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
            this.xGustoAPIVersion = Optional.ofNullable(xGustoAPIVersion);
            return this;
        }

        /**
         * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
         */
        public Builder xGustoAPIVersion(Optional<? extends VersionHeader> xGustoAPIVersion) {
            Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
            this.xGustoAPIVersion = xGustoAPIVersion;
            return this;
        }
        
        public DeleteV1EmployeesEmployeeIdI9AuthorizationDocumentsDocumentIdRequest build() {
            return new DeleteV1EmployeesEmployeeIdI9AuthorizationDocumentsDocumentIdRequest(
                employeeId,
                documentId,
                xGustoAPIVersion);
        }
    }
}

