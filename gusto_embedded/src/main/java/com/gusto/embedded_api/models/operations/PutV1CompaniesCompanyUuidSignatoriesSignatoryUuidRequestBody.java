/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.gusto.embedded_api.models.operations;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gusto.embedded_api.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;

public class PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody {

    /**
     * The current version of the object. See the versioning guide for information on how to use this field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    private Optional<String> version;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("first_name")
    private Optional<String> firstName;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("middle_initial")
    private Optional<String> middleInitial;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_name")
    private Optional<String> lastName;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    private Optional<String> title;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone")
    private Optional<String> phone;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("birthday")
    private Optional<String> birthday;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ssn")
    private Optional<String> ssn;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("home_address")
    private Optional<? extends PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidHomeAddress> homeAddress;

    @JsonCreator
    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody(
            @JsonProperty("version") Optional<String> version,
            @JsonProperty("first_name") Optional<String> firstName,
            @JsonProperty("middle_initial") Optional<String> middleInitial,
            @JsonProperty("last_name") Optional<String> lastName,
            @JsonProperty("title") Optional<String> title,
            @JsonProperty("phone") Optional<String> phone,
            @JsonProperty("birthday") Optional<String> birthday,
            @JsonProperty("ssn") Optional<String> ssn,
            @JsonProperty("home_address") Optional<? extends PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidHomeAddress> homeAddress) {
        Utils.checkNotNull(version, "version");
        Utils.checkNotNull(firstName, "firstName");
        Utils.checkNotNull(middleInitial, "middleInitial");
        Utils.checkNotNull(lastName, "lastName");
        Utils.checkNotNull(title, "title");
        Utils.checkNotNull(phone, "phone");
        Utils.checkNotNull(birthday, "birthday");
        Utils.checkNotNull(ssn, "ssn");
        Utils.checkNotNull(homeAddress, "homeAddress");
        this.version = version;
        this.firstName = firstName;
        this.middleInitial = middleInitial;
        this.lastName = lastName;
        this.title = title;
        this.phone = phone;
        this.birthday = birthday;
        this.ssn = ssn;
        this.homeAddress = homeAddress;
    }
    
    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody() {
        this(Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty());
    }

    /**
     * The current version of the object. See the versioning guide for information on how to use this field.
     */
    @JsonIgnore
    public Optional<String> version() {
        return version;
    }

    @JsonIgnore
    public Optional<String> firstName() {
        return firstName;
    }

    @JsonIgnore
    public Optional<String> middleInitial() {
        return middleInitial;
    }

    @JsonIgnore
    public Optional<String> lastName() {
        return lastName;
    }

    @JsonIgnore
    public Optional<String> title() {
        return title;
    }

    @JsonIgnore
    public Optional<String> phone() {
        return phone;
    }

    @JsonIgnore
    public Optional<String> birthday() {
        return birthday;
    }

    @JsonIgnore
    public Optional<String> ssn() {
        return ssn;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidHomeAddress> homeAddress() {
        return (Optional<PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidHomeAddress>) homeAddress;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The current version of the object. See the versioning guide for information on how to use this field.
     */
    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody withVersion(String version) {
        Utils.checkNotNull(version, "version");
        this.version = Optional.ofNullable(version);
        return this;
    }

    /**
     * The current version of the object. See the versioning guide for information on how to use this field.
     */
    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody withVersion(Optional<String> version) {
        Utils.checkNotNull(version, "version");
        this.version = version;
        return this;
    }

    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody withFirstName(String firstName) {
        Utils.checkNotNull(firstName, "firstName");
        this.firstName = Optional.ofNullable(firstName);
        return this;
    }

    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody withFirstName(Optional<String> firstName) {
        Utils.checkNotNull(firstName, "firstName");
        this.firstName = firstName;
        return this;
    }

    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody withMiddleInitial(String middleInitial) {
        Utils.checkNotNull(middleInitial, "middleInitial");
        this.middleInitial = Optional.ofNullable(middleInitial);
        return this;
    }

    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody withMiddleInitial(Optional<String> middleInitial) {
        Utils.checkNotNull(middleInitial, "middleInitial");
        this.middleInitial = middleInitial;
        return this;
    }

    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody withLastName(String lastName) {
        Utils.checkNotNull(lastName, "lastName");
        this.lastName = Optional.ofNullable(lastName);
        return this;
    }

    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody withLastName(Optional<String> lastName) {
        Utils.checkNotNull(lastName, "lastName");
        this.lastName = lastName;
        return this;
    }

    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody withTitle(String title) {
        Utils.checkNotNull(title, "title");
        this.title = Optional.ofNullable(title);
        return this;
    }

    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody withTitle(Optional<String> title) {
        Utils.checkNotNull(title, "title");
        this.title = title;
        return this;
    }

    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody withPhone(String phone) {
        Utils.checkNotNull(phone, "phone");
        this.phone = Optional.ofNullable(phone);
        return this;
    }

    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody withPhone(Optional<String> phone) {
        Utils.checkNotNull(phone, "phone");
        this.phone = phone;
        return this;
    }

    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody withBirthday(String birthday) {
        Utils.checkNotNull(birthday, "birthday");
        this.birthday = Optional.ofNullable(birthday);
        return this;
    }

    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody withBirthday(Optional<String> birthday) {
        Utils.checkNotNull(birthday, "birthday");
        this.birthday = birthday;
        return this;
    }

    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody withSsn(String ssn) {
        Utils.checkNotNull(ssn, "ssn");
        this.ssn = Optional.ofNullable(ssn);
        return this;
    }

    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody withSsn(Optional<String> ssn) {
        Utils.checkNotNull(ssn, "ssn");
        this.ssn = ssn;
        return this;
    }

    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody withHomeAddress(PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidHomeAddress homeAddress) {
        Utils.checkNotNull(homeAddress, "homeAddress");
        this.homeAddress = Optional.ofNullable(homeAddress);
        return this;
    }

    public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody withHomeAddress(Optional<? extends PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidHomeAddress> homeAddress) {
        Utils.checkNotNull(homeAddress, "homeAddress");
        this.homeAddress = homeAddress;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody other = (PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody) o;
        return 
            Objects.deepEquals(this.version, other.version) &&
            Objects.deepEquals(this.firstName, other.firstName) &&
            Objects.deepEquals(this.middleInitial, other.middleInitial) &&
            Objects.deepEquals(this.lastName, other.lastName) &&
            Objects.deepEquals(this.title, other.title) &&
            Objects.deepEquals(this.phone, other.phone) &&
            Objects.deepEquals(this.birthday, other.birthday) &&
            Objects.deepEquals(this.ssn, other.ssn) &&
            Objects.deepEquals(this.homeAddress, other.homeAddress);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            version,
            firstName,
            middleInitial,
            lastName,
            title,
            phone,
            birthday,
            ssn,
            homeAddress);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody.class,
                "version", version,
                "firstName", firstName,
                "middleInitial", middleInitial,
                "lastName", lastName,
                "title", title,
                "phone", phone,
                "birthday", birthday,
                "ssn", ssn,
                "homeAddress", homeAddress);
    }
    
    public final static class Builder {
 
        private Optional<String> version = Optional.empty();
 
        private Optional<String> firstName = Optional.empty();
 
        private Optional<String> middleInitial = Optional.empty();
 
        private Optional<String> lastName = Optional.empty();
 
        private Optional<String> title = Optional.empty();
 
        private Optional<String> phone = Optional.empty();
 
        private Optional<String> birthday = Optional.empty();
 
        private Optional<String> ssn = Optional.empty();
 
        private Optional<? extends PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidHomeAddress> homeAddress = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The current version of the object. See the versioning guide for information on how to use this field.
         */
        public Builder version(String version) {
            Utils.checkNotNull(version, "version");
            this.version = Optional.ofNullable(version);
            return this;
        }

        /**
         * The current version of the object. See the versioning guide for information on how to use this field.
         */
        public Builder version(Optional<String> version) {
            Utils.checkNotNull(version, "version");
            this.version = version;
            return this;
        }

        public Builder firstName(String firstName) {
            Utils.checkNotNull(firstName, "firstName");
            this.firstName = Optional.ofNullable(firstName);
            return this;
        }

        public Builder firstName(Optional<String> firstName) {
            Utils.checkNotNull(firstName, "firstName");
            this.firstName = firstName;
            return this;
        }

        public Builder middleInitial(String middleInitial) {
            Utils.checkNotNull(middleInitial, "middleInitial");
            this.middleInitial = Optional.ofNullable(middleInitial);
            return this;
        }

        public Builder middleInitial(Optional<String> middleInitial) {
            Utils.checkNotNull(middleInitial, "middleInitial");
            this.middleInitial = middleInitial;
            return this;
        }

        public Builder lastName(String lastName) {
            Utils.checkNotNull(lastName, "lastName");
            this.lastName = Optional.ofNullable(lastName);
            return this;
        }

        public Builder lastName(Optional<String> lastName) {
            Utils.checkNotNull(lastName, "lastName");
            this.lastName = lastName;
            return this;
        }

        public Builder title(String title) {
            Utils.checkNotNull(title, "title");
            this.title = Optional.ofNullable(title);
            return this;
        }

        public Builder title(Optional<String> title) {
            Utils.checkNotNull(title, "title");
            this.title = title;
            return this;
        }

        public Builder phone(String phone) {
            Utils.checkNotNull(phone, "phone");
            this.phone = Optional.ofNullable(phone);
            return this;
        }

        public Builder phone(Optional<String> phone) {
            Utils.checkNotNull(phone, "phone");
            this.phone = phone;
            return this;
        }

        public Builder birthday(String birthday) {
            Utils.checkNotNull(birthday, "birthday");
            this.birthday = Optional.ofNullable(birthday);
            return this;
        }

        public Builder birthday(Optional<String> birthday) {
            Utils.checkNotNull(birthday, "birthday");
            this.birthday = birthday;
            return this;
        }

        public Builder ssn(String ssn) {
            Utils.checkNotNull(ssn, "ssn");
            this.ssn = Optional.ofNullable(ssn);
            return this;
        }

        public Builder ssn(Optional<String> ssn) {
            Utils.checkNotNull(ssn, "ssn");
            this.ssn = ssn;
            return this;
        }

        public Builder homeAddress(PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidHomeAddress homeAddress) {
            Utils.checkNotNull(homeAddress, "homeAddress");
            this.homeAddress = Optional.ofNullable(homeAddress);
            return this;
        }

        public Builder homeAddress(Optional<? extends PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidHomeAddress> homeAddress) {
            Utils.checkNotNull(homeAddress, "homeAddress");
            this.homeAddress = homeAddress;
            return this;
        }
        
        public PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody build() {
            return new PutV1CompaniesCompanyUuidSignatoriesSignatoryUuidRequestBody(
                version,
                firstName,
                middleInitial,
                lastName,
                title,
                phone,
                birthday,
                ssn,
                homeAddress);
        }
    }
}

