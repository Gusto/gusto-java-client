/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.gusto.embedded_api.models.components;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gusto.embedded_api.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Objects;
/**
 * AccruingTimeOffHourObject
 * 
 * <p>Example response
 */

public class AccruingTimeOffHourObject {

    @JsonProperty("hours_earned")
    private List<AccruingTimeOffHour> hoursEarned;

    @JsonCreator
    public AccruingTimeOffHourObject(
            @JsonProperty("hours_earned") List<AccruingTimeOffHour> hoursEarned) {
        Utils.checkNotNull(hoursEarned, "hoursEarned");
        this.hoursEarned = hoursEarned;
    }

    @JsonIgnore
    public List<AccruingTimeOffHour> hoursEarned() {
        return hoursEarned;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public AccruingTimeOffHourObject withHoursEarned(List<AccruingTimeOffHour> hoursEarned) {
        Utils.checkNotNull(hoursEarned, "hoursEarned");
        this.hoursEarned = hoursEarned;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AccruingTimeOffHourObject other = (AccruingTimeOffHourObject) o;
        return 
            Objects.deepEquals(this.hoursEarned, other.hoursEarned);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            hoursEarned);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AccruingTimeOffHourObject.class,
                "hoursEarned", hoursEarned);
    }
    
    public final static class Builder {
 
        private List<AccruingTimeOffHour> hoursEarned;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder hoursEarned(List<AccruingTimeOffHour> hoursEarned) {
            Utils.checkNotNull(hoursEarned, "hoursEarned");
            this.hoursEarned = hoursEarned;
            return this;
        }
        
        public AccruingTimeOffHourObject build() {
            return new AccruingTimeOffHourObject(
                hoursEarned);
        }
    }
}

