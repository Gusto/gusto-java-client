/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.gusto.embedded_api.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gusto.embedded_api.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public class PutV1EmployeesEmployeeIdStateTaxesRequestBody {

    @JsonProperty("states")
    private List<States> states;

    @JsonCreator
    public PutV1EmployeesEmployeeIdStateTaxesRequestBody(
            @JsonProperty("states") List<States> states) {
        Utils.checkNotNull(states, "states");
        this.states = states;
    }

    @JsonIgnore
    public List<States> states() {
        return states;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public PutV1EmployeesEmployeeIdStateTaxesRequestBody withStates(List<States> states) {
        Utils.checkNotNull(states, "states");
        this.states = states;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PutV1EmployeesEmployeeIdStateTaxesRequestBody other = (PutV1EmployeesEmployeeIdStateTaxesRequestBody) o;
        return 
            Objects.deepEquals(this.states, other.states);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            states);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PutV1EmployeesEmployeeIdStateTaxesRequestBody.class,
                "states", states);
    }
    
    public final static class Builder {
 
        private List<States> states;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder states(List<States> states) {
            Utils.checkNotNull(states, "states");
            this.states = states;
            return this;
        }
        
        public PutV1EmployeesEmployeeIdStateTaxesRequestBody build() {
            return new PutV1EmployeesEmployeeIdStateTaxesRequestBody(
                states);
        }
    }
}

