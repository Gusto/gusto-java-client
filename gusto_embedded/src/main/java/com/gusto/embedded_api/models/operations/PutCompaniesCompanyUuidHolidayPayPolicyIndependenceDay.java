/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.gusto.embedded_api.models.operations;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gusto.embedded_api.utils.Utils;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

public class PutCompaniesCompanyUuidHolidayPayPolicyIndependenceDay {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selected")
    private Optional<Boolean> selected;

    @JsonCreator
    public PutCompaniesCompanyUuidHolidayPayPolicyIndependenceDay(
            @JsonProperty("selected") Optional<Boolean> selected) {
        Utils.checkNotNull(selected, "selected");
        this.selected = selected;
    }
    
    public PutCompaniesCompanyUuidHolidayPayPolicyIndependenceDay() {
        this(Optional.empty());
    }

    @JsonIgnore
    public Optional<Boolean> selected() {
        return selected;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public PutCompaniesCompanyUuidHolidayPayPolicyIndependenceDay withSelected(boolean selected) {
        Utils.checkNotNull(selected, "selected");
        this.selected = Optional.ofNullable(selected);
        return this;
    }

    public PutCompaniesCompanyUuidHolidayPayPolicyIndependenceDay withSelected(Optional<Boolean> selected) {
        Utils.checkNotNull(selected, "selected");
        this.selected = selected;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PutCompaniesCompanyUuidHolidayPayPolicyIndependenceDay other = (PutCompaniesCompanyUuidHolidayPayPolicyIndependenceDay) o;
        return 
            Objects.deepEquals(this.selected, other.selected);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            selected);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PutCompaniesCompanyUuidHolidayPayPolicyIndependenceDay.class,
                "selected", selected);
    }
    
    public final static class Builder {
 
        private Optional<Boolean> selected = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder selected(boolean selected) {
            Utils.checkNotNull(selected, "selected");
            this.selected = Optional.ofNullable(selected);
            return this;
        }

        public Builder selected(Optional<Boolean> selected) {
            Utils.checkNotNull(selected, "selected");
            this.selected = selected;
            return this;
        }
        
        public PutCompaniesCompanyUuidHolidayPayPolicyIndependenceDay build() {
            return new PutCompaniesCompanyUuidHolidayPayPolicyIndependenceDay(
                selected);
        }
    }
}

