/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;

/**
 * PutV1PartnerManagedCompaniesCompanyUuidMigrateResponseBody - Example response
 */

public class PutV1PartnerManagedCompaniesCompanyUuidMigrateResponseBody {

    /**
     * The company UUID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("company_uuid")
    private Optional<String> companyUuid;

    /**
     * The migration status. 'success' is the only valid return value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("migration_status")
    private Optional<? extends MigrationStatus> migrationStatus;

    @JsonCreator
    public PutV1PartnerManagedCompaniesCompanyUuidMigrateResponseBody(
            @JsonProperty("company_uuid") Optional<String> companyUuid,
            @JsonProperty("migration_status") Optional<? extends MigrationStatus> migrationStatus) {
        Utils.checkNotNull(companyUuid, "companyUuid");
        Utils.checkNotNull(migrationStatus, "migrationStatus");
        this.companyUuid = companyUuid;
        this.migrationStatus = migrationStatus;
    }
    
    public PutV1PartnerManagedCompaniesCompanyUuidMigrateResponseBody() {
        this(Optional.empty(), Optional.empty());
    }

    /**
     * The company UUID
     */
    @JsonIgnore
    public Optional<String> companyUuid() {
        return companyUuid;
    }

    /**
     * The migration status. 'success' is the only valid return value.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<MigrationStatus> migrationStatus() {
        return (Optional<MigrationStatus>) migrationStatus;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The company UUID
     */
    public PutV1PartnerManagedCompaniesCompanyUuidMigrateResponseBody withCompanyUuid(String companyUuid) {
        Utils.checkNotNull(companyUuid, "companyUuid");
        this.companyUuid = Optional.ofNullable(companyUuid);
        return this;
    }

    /**
     * The company UUID
     */
    public PutV1PartnerManagedCompaniesCompanyUuidMigrateResponseBody withCompanyUuid(Optional<String> companyUuid) {
        Utils.checkNotNull(companyUuid, "companyUuid");
        this.companyUuid = companyUuid;
        return this;
    }

    /**
     * The migration status. 'success' is the only valid return value.
     */
    public PutV1PartnerManagedCompaniesCompanyUuidMigrateResponseBody withMigrationStatus(MigrationStatus migrationStatus) {
        Utils.checkNotNull(migrationStatus, "migrationStatus");
        this.migrationStatus = Optional.ofNullable(migrationStatus);
        return this;
    }

    /**
     * The migration status. 'success' is the only valid return value.
     */
    public PutV1PartnerManagedCompaniesCompanyUuidMigrateResponseBody withMigrationStatus(Optional<? extends MigrationStatus> migrationStatus) {
        Utils.checkNotNull(migrationStatus, "migrationStatus");
        this.migrationStatus = migrationStatus;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PutV1PartnerManagedCompaniesCompanyUuidMigrateResponseBody other = (PutV1PartnerManagedCompaniesCompanyUuidMigrateResponseBody) o;
        return 
            Objects.deepEquals(this.companyUuid, other.companyUuid) &&
            Objects.deepEquals(this.migrationStatus, other.migrationStatus);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            companyUuid,
            migrationStatus);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PutV1PartnerManagedCompaniesCompanyUuidMigrateResponseBody.class,
                "companyUuid", companyUuid,
                "migrationStatus", migrationStatus);
    }
    
    public final static class Builder {
 
        private Optional<String> companyUuid = Optional.empty();
 
        private Optional<? extends MigrationStatus> migrationStatus = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The company UUID
         */
        public Builder companyUuid(String companyUuid) {
            Utils.checkNotNull(companyUuid, "companyUuid");
            this.companyUuid = Optional.ofNullable(companyUuid);
            return this;
        }

        /**
         * The company UUID
         */
        public Builder companyUuid(Optional<String> companyUuid) {
            Utils.checkNotNull(companyUuid, "companyUuid");
            this.companyUuid = companyUuid;
            return this;
        }

        /**
         * The migration status. 'success' is the only valid return value.
         */
        public Builder migrationStatus(MigrationStatus migrationStatus) {
            Utils.checkNotNull(migrationStatus, "migrationStatus");
            this.migrationStatus = Optional.ofNullable(migrationStatus);
            return this;
        }

        /**
         * The migration status. 'success' is the only valid return value.
         */
        public Builder migrationStatus(Optional<? extends MigrationStatus> migrationStatus) {
            Utils.checkNotNull(migrationStatus, "migrationStatus");
            this.migrationStatus = migrationStatus;
            return this;
        }
        
        public PutV1PartnerManagedCompaniesCompanyUuidMigrateResponseBody build() {
            return new PutV1PartnerManagedCompaniesCompanyUuidMigrateResponseBody(
                companyUuid,
                migrationStatus);
        }
    }
}

