/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;
import org.openapis.openapi.models.components.VersionHeader;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;


public class GetV1CompanyBenefitsCompanyBenefitIdRequest {

    /**
     * The UUID of the company benefit
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=company_benefit_id")
    private String companyBenefitId;

    /**
     * Whether to return employee benefits associated with the benefit
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=with_employee_benefits")
    private Optional<Boolean> withEmployeeBenefits;

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Gusto-API-Version")
    private Optional<? extends VersionHeader> xGustoAPIVersion;

    @JsonCreator
    public GetV1CompanyBenefitsCompanyBenefitIdRequest(
            String companyBenefitId,
            Optional<Boolean> withEmployeeBenefits,
            Optional<? extends VersionHeader> xGustoAPIVersion) {
        Utils.checkNotNull(companyBenefitId, "companyBenefitId");
        Utils.checkNotNull(withEmployeeBenefits, "withEmployeeBenefits");
        Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
        this.companyBenefitId = companyBenefitId;
        this.withEmployeeBenefits = withEmployeeBenefits;
        this.xGustoAPIVersion = xGustoAPIVersion;
    }
    
    public GetV1CompanyBenefitsCompanyBenefitIdRequest(
            String companyBenefitId) {
        this(companyBenefitId, Optional.empty(), Optional.empty());
    }

    /**
     * The UUID of the company benefit
     */
    @JsonIgnore
    public String companyBenefitId() {
        return companyBenefitId;
    }

    /**
     * Whether to return employee benefits associated with the benefit
     */
    @JsonIgnore
    public Optional<Boolean> withEmployeeBenefits() {
        return withEmployeeBenefits;
    }

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<VersionHeader> xGustoAPIVersion() {
        return (Optional<VersionHeader>) xGustoAPIVersion;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The UUID of the company benefit
     */
    public GetV1CompanyBenefitsCompanyBenefitIdRequest withCompanyBenefitId(String companyBenefitId) {
        Utils.checkNotNull(companyBenefitId, "companyBenefitId");
        this.companyBenefitId = companyBenefitId;
        return this;
    }

    /**
     * Whether to return employee benefits associated with the benefit
     */
    public GetV1CompanyBenefitsCompanyBenefitIdRequest withWithEmployeeBenefits(boolean withEmployeeBenefits) {
        Utils.checkNotNull(withEmployeeBenefits, "withEmployeeBenefits");
        this.withEmployeeBenefits = Optional.ofNullable(withEmployeeBenefits);
        return this;
    }

    /**
     * Whether to return employee benefits associated with the benefit
     */
    public GetV1CompanyBenefitsCompanyBenefitIdRequest withWithEmployeeBenefits(Optional<Boolean> withEmployeeBenefits) {
        Utils.checkNotNull(withEmployeeBenefits, "withEmployeeBenefits");
        this.withEmployeeBenefits = withEmployeeBenefits;
        return this;
    }

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    public GetV1CompanyBenefitsCompanyBenefitIdRequest withXGustoAPIVersion(VersionHeader xGustoAPIVersion) {
        Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
        this.xGustoAPIVersion = Optional.ofNullable(xGustoAPIVersion);
        return this;
    }

    /**
     * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
     */
    public GetV1CompanyBenefitsCompanyBenefitIdRequest withXGustoAPIVersion(Optional<? extends VersionHeader> xGustoAPIVersion) {
        Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
        this.xGustoAPIVersion = xGustoAPIVersion;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetV1CompanyBenefitsCompanyBenefitIdRequest other = (GetV1CompanyBenefitsCompanyBenefitIdRequest) o;
        return 
            Objects.deepEquals(this.companyBenefitId, other.companyBenefitId) &&
            Objects.deepEquals(this.withEmployeeBenefits, other.withEmployeeBenefits) &&
            Objects.deepEquals(this.xGustoAPIVersion, other.xGustoAPIVersion);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            companyBenefitId,
            withEmployeeBenefits,
            xGustoAPIVersion);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetV1CompanyBenefitsCompanyBenefitIdRequest.class,
                "companyBenefitId", companyBenefitId,
                "withEmployeeBenefits", withEmployeeBenefits,
                "xGustoAPIVersion", xGustoAPIVersion);
    }
    
    public final static class Builder {
 
        private String companyBenefitId;
 
        private Optional<Boolean> withEmployeeBenefits = Optional.empty();
 
        private Optional<? extends VersionHeader> xGustoAPIVersion = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The UUID of the company benefit
         */
        public Builder companyBenefitId(String companyBenefitId) {
            Utils.checkNotNull(companyBenefitId, "companyBenefitId");
            this.companyBenefitId = companyBenefitId;
            return this;
        }

        /**
         * Whether to return employee benefits associated with the benefit
         */
        public Builder withEmployeeBenefits(boolean withEmployeeBenefits) {
            Utils.checkNotNull(withEmployeeBenefits, "withEmployeeBenefits");
            this.withEmployeeBenefits = Optional.ofNullable(withEmployeeBenefits);
            return this;
        }

        /**
         * Whether to return employee benefits associated with the benefit
         */
        public Builder withEmployeeBenefits(Optional<Boolean> withEmployeeBenefits) {
            Utils.checkNotNull(withEmployeeBenefits, "withEmployeeBenefits");
            this.withEmployeeBenefits = withEmployeeBenefits;
            return this;
        }

        /**
         * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
         */
        public Builder xGustoAPIVersion(VersionHeader xGustoAPIVersion) {
            Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
            this.xGustoAPIVersion = Optional.ofNullable(xGustoAPIVersion);
            return this;
        }

        /**
         * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
         */
        public Builder xGustoAPIVersion(Optional<? extends VersionHeader> xGustoAPIVersion) {
            Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
            this.xGustoAPIVersion = xGustoAPIVersion;
            return this;
        }
        
        public GetV1CompanyBenefitsCompanyBenefitIdRequest build() {
            return new GetV1CompanyBenefitsCompanyBenefitIdRequest(
                companyBenefitId,
                withEmployeeBenefits,
                xGustoAPIVersion);
        }
    }
}

