/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapis.openapi.models.components.VersionHeader;
import org.openapis.openapi.utils.Utils;

public class GetV1EmployeesRequestBuilder {

    private String employeeId;
    private Optional<? extends List<QueryParamInclude>> include = Optional.empty();
    private Optional<? extends VersionHeader> xGustoAPIVersion = Optional.empty();
    private final SDKMethodInterfaces.MethodCallGetV1Employees sdk;

    public GetV1EmployeesRequestBuilder(SDKMethodInterfaces.MethodCallGetV1Employees sdk) {
        this.sdk = sdk;
    }

    public GetV1EmployeesRequestBuilder employeeId(String employeeId) {
        Utils.checkNotNull(employeeId, "employeeId");
        this.employeeId = employeeId;
        return this;
    }
                
    public GetV1EmployeesRequestBuilder include(List<QueryParamInclude> include) {
        Utils.checkNotNull(include, "include");
        this.include = Optional.of(include);
        return this;
    }

    public GetV1EmployeesRequestBuilder include(Optional<? extends List<QueryParamInclude>> include) {
        Utils.checkNotNull(include, "include");
        this.include = include;
        return this;
    }
                
    public GetV1EmployeesRequestBuilder xGustoAPIVersion(VersionHeader xGustoAPIVersion) {
        Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
        this.xGustoAPIVersion = Optional.of(xGustoAPIVersion);
        return this;
    }

    public GetV1EmployeesRequestBuilder xGustoAPIVersion(Optional<? extends VersionHeader> xGustoAPIVersion) {
        Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
        this.xGustoAPIVersion = xGustoAPIVersion;
        return this;
    }

    public GetV1EmployeesResponse call() throws Exception {

        return sdk.get(
            employeeId,
            include,
            xGustoAPIVersion);
    }
}
