/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.lang.String;
import java.util.Optional;
import org.openapis.openapi.models.components.VersionHeader;
import org.openapis.openapi.utils.Utils;

public class DeleteV1WebhookSubscriptionUuidRequestBuilder {

    private DeleteV1WebhookSubscriptionUuidSecurity security;
    private String webhookSubscriptionUuid;
    private Optional<? extends VersionHeader> xGustoAPIVersion = Optional.empty();
    private final SDKMethodInterfaces.MethodCallDeleteV1WebhookSubscriptionUuid sdk;

    public DeleteV1WebhookSubscriptionUuidRequestBuilder(SDKMethodInterfaces.MethodCallDeleteV1WebhookSubscriptionUuid sdk) {
        this.sdk = sdk;
    }

    public DeleteV1WebhookSubscriptionUuidRequestBuilder security(DeleteV1WebhookSubscriptionUuidSecurity security) {
        Utils.checkNotNull(security, "security");
        this.security = security;
        return this;
    }

    public DeleteV1WebhookSubscriptionUuidRequestBuilder webhookSubscriptionUuid(String webhookSubscriptionUuid) {
        Utils.checkNotNull(webhookSubscriptionUuid, "webhookSubscriptionUuid");
        this.webhookSubscriptionUuid = webhookSubscriptionUuid;
        return this;
    }
                
    public DeleteV1WebhookSubscriptionUuidRequestBuilder xGustoAPIVersion(VersionHeader xGustoAPIVersion) {
        Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
        this.xGustoAPIVersion = Optional.of(xGustoAPIVersion);
        return this;
    }

    public DeleteV1WebhookSubscriptionUuidRequestBuilder xGustoAPIVersion(Optional<? extends VersionHeader> xGustoAPIVersion) {
        Utils.checkNotNull(xGustoAPIVersion, "xGustoAPIVersion");
        this.xGustoAPIVersion = xGustoAPIVersion;
        return this;
    }

    public DeleteV1WebhookSubscriptionUuidResponse call() throws Exception {

        return sdk.deleteSubscription(
            security,
            webhookSubscriptionUuid,
            xGustoAPIVersion);
    }
}
